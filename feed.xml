<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.5.1">Jekyll</generator><link href="https://denzilly.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://denzilly.github.io/" rel="alternate" type="text/html" /><updated>2019-01-17T12:10:12+01:00</updated><id>https://denzilly.github.io/</id><title type="html">Bart Timmer</title><subtitle>Interests, projects, and nonsense.</subtitle><author><name>Bart Timmer</name><email>btimmer313@gmail.com</email></author><entry><title type="html">Riddle: Surviving on Mars</title><link href="https://denzilly.github.io/2019/01/14/marssurvival/" rel="alternate" type="text/html" title="Riddle: Surviving on Mars" /><published>2019-01-14T00:00:00+01:00</published><updated>2019-01-14T00:00:00+01:00</updated><id>https://denzilly.github.io/2019/01/14/marssurvival</id><content type="html" xml:base="https://denzilly.github.io/2019/01/14/marssurvival/">&lt;p align=&quot;middle&quot;&gt;&lt;img src=&quot;https://i.imgur.com/4npodS6.jpg&quot; alt=&quot;martian&quot; /&gt;&lt;/p&gt;
&lt;p style=&quot;color: gray; font-size: 80%; text-align: center;&quot;&gt;&lt;em&gt;All my makerbots are broken&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This is a solution attempt to a riddle originally posted on &lt;a href=&quot;https://FiveThirtyEight.com&quot;&gt;FiveThirtyEight&lt;/a&gt; &lt;a href=&quot;https://fivethirtyeight.com/features/in-space-no-one-can-hear-your-3d-printer-die/&quot;&gt;here&lt;/a&gt;. I recently discovered their weekly “riddlers”, and really enjoyed trying to figure this one out!&lt;/p&gt;

&lt;h3 id=&quot;the-premise&quot;&gt;The Premise&lt;/h3&gt;

&lt;p&gt;You are an astronaut, trying to survive on Mars until you are relieved by the next crew in 5 years time (1,825 earth days, excluding leap years).&lt;/p&gt;

&lt;p&gt;You live in a habitation pod that has a series of critical life support components, as well as 3 3D printers to manufacture parts and additional supplies that you might need. The life support infrastructure is essential in providing you with food, water, and breathable atmosphere.&lt;/p&gt;

&lt;p&gt;Your 3D printers help you to fabricate parts, should the life support equipment break down. They can also be used to make parts for eachother, should one of the printers break down. You cannot scavenge them for parts, as they are made by different manufacturers; thus printing is your only option. Each 3D printer can make &lt;strong&gt;(1)&lt;/strong&gt; part per day&lt;/p&gt;

&lt;p&gt;One part of your critical life support systems is guaranteed to fail &lt;strong&gt;daily&lt;/strong&gt;, requiring a 3D printer to spend a day replacing said part.&lt;/p&gt;

&lt;p&gt;Your 3D printers have fixed probabilities to fail on a given day, requiring a new part:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Printer 1 : 10%&lt;/li&gt;
  &lt;li&gt;Printer 2 : 7.5%&lt;/li&gt;
  &lt;li&gt;Printer 3 : 5%&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;What is the probability that you will survive the full 1,825 days?&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;solution-attempt&quot;&gt;Solution attempt&lt;/h3&gt;

&lt;p&gt;There are two ways to solve this problem–theoretically or empirically. I opted for the latter because I thought it might be more interesting to brute force my way to a probability of survival by modeling the situation programatically.&lt;/p&gt;

&lt;p&gt;I decided to structure everything around a daily cycle, under certain assumptions.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;We check whether or not the printers are functional every morning (first for loop)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Based on the newly determined printer status, we try to fix broken printers if possible.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;We cannot pre-fabricate parts, as we are not given details on how many parts each machine contains etc.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This leaves us with two for loops, as seen in the code block below (within the while loop).&lt;/p&gt;

&lt;div class=&quot;language-py highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;random&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;plt&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;matplotlib&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;numpy&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;np&lt;/span&gt;


&lt;span class=&quot;c&quot;&gt;#Probablilities&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;p1break&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.1&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;p2break&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.075&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;p3break&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.05&lt;/span&gt;



&lt;span class=&quot;c&quot;&gt;#One day&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;survive&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;#Printer status&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;status&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;#Probabilities out of 1000 to use integers&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;probs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p1break&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p2break&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p3break&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;days&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;


    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;

        &lt;span class=&quot;c&quot;&gt;#Check machine status on given day, if working&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;idx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;enumerate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;randint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;probs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;idx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]):&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;idx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;

        &lt;span class=&quot;c&quot;&gt;#If machine is broken, test if it can be fixed&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;idx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;enumerate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;

            &lt;span class=&quot;c&quot;&gt;#Count how many of the other machines are working&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;working&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;working&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;working&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;
                &lt;span class=&quot;c&quot;&gt;#No machines working, you' dead sucka&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;working&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;days&lt;/span&gt;
                &lt;span class=&quot;c&quot;&gt;#2 Machines working, you can be fixed!&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;working&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;idx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;days&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;days&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The while loop runs the survive function until, well, you’re no longer surviving. The first loop checks the status of each printer, which is previously initialised at 1. Using probabilities out of 1000 (to maintain integer values), the script calls a random number between 1-1000. If this value falls below the pre-specified probability level, the printer is considered broken and its status is set to 0.&lt;/p&gt;

&lt;p&gt;The second loop determines what we can potentially do with any broken printers. There are 3 cases:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;All 3 printers are broken, working == 0. You can’t replace life support parts and are therefore dead. The return statement here breaks the while loop, and returns the total number of days that you survived.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;2 printers are broken, working == 1. Your remaining machine is dedicated to fixing life support, and cannot be used to repair the other printers. You are waiting, hoping that this lone printer will last you the 5 years. This case is not coded, because it is handled by the first loop.&lt;/li&gt;
  &lt;li&gt;1 printer is broken, working == 2. You have 2 operational printers, of which one will be dedicated to life support parts, and the second can be used to restore your broken printer.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Finally, a day is added to the counter.&lt;/p&gt;

&lt;p&gt;That’s basically it!&lt;/p&gt;

&lt;p&gt;The following block runs the program for as many iterations as necessary to determine an appropriate survival probability, noting down the number of days survived in each instance.
In the end, it reports the average number of days survived, number of times you made it to 5 years, as well as estimated probability of survival.&lt;/p&gt;

&lt;div class=&quot;language-py highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#This block runs survive() multiple times and tallies the results&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;avgdays&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;survival&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;days&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;iterations&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100000&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iterations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;surviveddays&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;survive&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;avgdays&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;avgdays&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;surviveddays&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;days&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;surviveddays&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;surviveddays&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1825&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;survival&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;survival&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;You survived on average &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s days after &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s iterations&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;avgdays&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iterations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iterations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Number of times survived = &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;survival&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Your survival probability is &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;survival&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iterations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I found that with 1 million iterations, I tend to survive on average just 78 days and change, nowhere close!&lt;/p&gt;
&lt;div class=&quot;language-py highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;You&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;survived&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;on&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;average&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;78.881304&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;days&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;after&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000000&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iterations&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Number&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;times&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;survived&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Your&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;survival&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;probability&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p align=&quot;middle&quot;&gt;&lt;img src=&quot;https://i.imgur.com/ka7WXeU.png&quot; alt=&quot;histogram&quot; /&gt;&lt;/p&gt;
&lt;p style=&quot;color: gray; font-size: 80%; text-align: center;&quot;&gt;&lt;em&gt;Bleak&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The histogram provides illustrative context to our lack of hope, clearly showing that we are more than pretty unlikely to keep our pod running long enough.&lt;/p&gt;

&lt;p&gt;Theoretically speaking however, there must be a chance that we survive this ordeal…&lt;/p&gt;

&lt;p&gt;For the full code, as well as a snippet to generate a histogram, see my &lt;a href=&quot;https://github.com/denzilly/riddles&quot;&gt;github page&lt;/a&gt;.&lt;/p&gt;</content><author><name>Bart Timmer</name><email>btimmer313@gmail.com</email></author><category term="Programming" /><summary type="html">All my makerbots are broken This is a solution attempt to a riddle originally posted on FiveThirtyEight here. I recently discovered their weekly “riddlers”, and really enjoyed trying to figure this one out!</summary></entry><entry><title type="html">Slaying the Top 2000 Part 3: reCAPTCHA</title><link href="https://denzilly.github.io/2019/01/08/Slayerpart3/" rel="alternate" type="text/html" title="Slaying the Top 2000 Part 3: reCAPTCHA" /><published>2019-01-08T00:00:00+01:00</published><updated>2019-01-08T00:00:00+01:00</updated><id>https://denzilly.github.io/2019/01/08/Slayerpart3</id><content type="html" xml:base="https://denzilly.github.io/2019/01/08/Slayerpart3/">&lt;p align=&quot;middle&quot;&gt;&lt;img src=&quot;https://i.imgur.com/EshyYPS.jpg&quot; alt=&quot;RIP&quot; /&gt;&lt;/p&gt;
&lt;p style=&quot;color: gray; font-size: 80%; text-align: center;&quot;&gt;&lt;em&gt;All hope is lost.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Unfortunately, this is where the project came to an end. Google’s secret weapon was too much to handle, an insurmountable obstacle. Crafted in the heart of mount Fuji by evil samurai programmers, reCAPTCHA is actually a pretty neat piece of technology, and more advanced than you would think. This post will cover a little bit of how CAPTCHA works, as well as a possible workaround.&lt;/p&gt;

&lt;p&gt;The most modern iteration of CAPTCHA has a wide array of tools to detect whether or not the user is an actual human (of which not all are known, as far as I’m aware.) It looks at things like how you move your mouse, or how you type, but also your cached browsing history/cookies to see if you have been acting “human” on the internet (browsing social media, reading the news, researching black market kidney prices).&lt;/p&gt;

&lt;p&gt;Without more advanced methods, bots usually type out letters in perfect time increments, or move the mouse to a certain location at a perfectly constant speed and in a linear direction. For a human, it would be impossible to type out a word with exact 10ms increments between keystrokes, or navigate a mouse in a perfectly straight line.&lt;/p&gt;

&lt;p&gt;The humorously morbid picture above displays the old version of reCAPTCHA, with the distorted letters–these are obselete, since they can be solved automatically with around 99.8% accuracy. You will recognize the new version as looking something like this.&lt;/p&gt;

&lt;p align=&quot;middle&quot;&gt;&lt;img src=&quot;https://i.imgur.com/zOzcQgq.jpg&quot; alt=&quot;Captchaexample&quot; /&gt;&lt;/p&gt;
&lt;p style=&quot;color:gray; font-size: 80%; text-align: center;&quot;&gt;Modern reCAPTCHA&lt;/p&gt;

&lt;p&gt;The unchecked box on the upper left is what everyone sees before attempting to solve a CAPTCHA. When you attempt to click it, one of two things will happen:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;If CAPTCHA has seen into your past, and determined that your behavious was “human” enough, you might be lucky enough to get a checkmark straight away, without needing to solve a puzzle.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;If CAPTCHA doesn’t know you well, or thinks you are behaving like a bot, it will ask you to identify some  objects from random google maps photos. This puzzle is very difficult to solve automatically, since it would require genuine image recognition (seeing as how the pictures are taken from streetview, and not stored anywhere else online).&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Given this foolproof detection system, surely this is a bust?&lt;/p&gt;

&lt;p align=&quot;middle&quot;&gt;&lt;img src=&quot;https://i.imgur.com/HfhUyEr.jpg&quot; alt=&quot;slayerfan&quot; /&gt;&lt;/p&gt;
&lt;p style=&quot;color:gray; font-size: 80%; text-align: center;&quot;&gt;A typical metal fan, deep in thought.&lt;/p&gt;

&lt;h2 id=&quot;speech-to-text-solver&quot;&gt;Speech-to-Text Solver&lt;/h2&gt;

&lt;p&gt;The industrious people who keep themselves busy with this sort of thing are remarkably crafty, and always coming up with new and innovative solutions to spoof bot-detection systems. One such system, that I didn’t have the time to test, but would love to give a shot sometime in the future, involves taking advantage of the visually impaired assistance offered with the image recognition puzzle.&lt;/p&gt;

&lt;p&gt;Note the little headphones icon at the bottom of the image recognition puzzle–this allows for visually impaired individuals to complete a speech-to-text puzzle instead, typing out an audio phrase that your computer spits out.&lt;/p&gt;

&lt;p class=&quot;lead&quot; width=&quot;100px&quot; align=&quot;middle&quot;&gt;&lt;img src=&quot;https://i.imgur.com/GTEyQoD.png&quot; alt=&quot;Audiocaptcha&quot; /&gt;&lt;/p&gt;
&lt;p style=&quot;color:gray; font-size: 80%; text-align: center;&quot;&gt;Audio solve&lt;/p&gt;

&lt;p&gt;The workaround, based on &lt;a href=&quot;https://www.reddit.com/r/Python/comments/8oqp7v/hey_i_made_a_google_recaptcha_solver_bot_too/&quot;&gt;this&lt;/a&gt; reddit post, involves automatically downloading the mp3 file of the audio, running it through a speech-to-text API (such as IBM’s Watson s-t-t tool), and regurgitating the appropriate text.&lt;/p&gt;

&lt;p&gt;Unfortunately, it’s not as simple as it sounds–if CAPTCHA doesn’t believe your actions to have been human, it will reject your request to listen to the audio. You need to first convince it that your recent behaviour is human-like before you can even request to solve it this way. It would be interesting to test this to see if this still works, that being said, word on the street is that the Google-ites are hard at work on the latest version of CAPTCHA that will bring all botters to their knees!&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;All in all, this was a neat project to get back into python, as well as learn a little bit about how bot detection works. Even though this was a completely hypothetical application, I’m sure that the Selenium methods used here could be very useful for other applications where browser automation is required.&lt;/p&gt;

&lt;p&gt;As for Slayer being more prominent in the top 2000, perhaps we should start a political movement instead. Alternatively, we could start some commercial movement in a Bangladeshi click-farm?&lt;/p&gt;

&lt;p&gt;Until next year!&lt;/p&gt;</content><author><name>Bart Timmer</name><email>btimmer313@gmail.com</email></author><category term="Programming" /><category term="Music" /><summary type="html">All hope is lost. Unfortunately, this is where the project came to an end. Google’s secret weapon was too much to handle, an insurmountable obstacle. Crafted in the heart of mount Fuji by evil samurai programmers, reCAPTCHA is actually a pretty neat piece of technology, and more advanced than you would think. This post will cover a little bit of how CAPTCHA works, as well as a possible workaround.</summary></entry><entry><title type="html">Slaying the Top 2000 Part 2: Names and Emails</title><link href="https://denzilly.github.io/2018/12/22/Slayerpart2/" rel="alternate" type="text/html" title="Slaying the Top 2000 Part 2: Names and Emails" /><published>2018-12-22T00:00:00+01:00</published><updated>2018-12-22T00:00:00+01:00</updated><id>https://denzilly.github.io/2018/12/22/Slayerpart2</id><content type="html" xml:base="https://denzilly.github.io/2018/12/22/Slayerpart2/">&lt;p&gt;Welcome back to this short write-up of the top2000 Slayer voter! In this installment, we will look more closely at the part of the script that generates random names and email addresses.&lt;/p&gt;

&lt;h2 id=&quot;name-generator&quot;&gt;Name Generator&lt;/h2&gt;

&lt;p&gt;The next step in the voting procedure asks for some personal information– a name and email address. Fortunately, neither are used for any sort of verification, but I still thought it a good idea to at least use a somewhat realistic naming scheme for my legion of autonomous metal-heads.&lt;/p&gt;

&lt;p&gt;In order to do this, I decided to select first and last names at random from an online database of the 10,000 most common Dutch names. These were scraped into two csv files, &lt;em&gt;voornamen&lt;/em&gt; and &lt;em&gt;acthernamen&lt;/em&gt;, respectively.&lt;/p&gt;

&lt;p&gt;What follows is a simple block of code that chooses two random integers, which are used to call a row from either csv file, representing a first and last name.&lt;/p&gt;

&lt;div class=&quot;language-py highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#The following funciton creates a random dutch name from the list of top 10000 first and last names&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;namegenerator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;#Make sure working directory is script location&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;abspath&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;abspath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__file__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;dname&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dirname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;abspath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;chdir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;


    &lt;span class=&quot;c&quot;&gt;#Choose random row from first and lastname csvs&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;firstnum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;randint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;lastnum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;randint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;nameget&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;csv_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;csv_reader&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;csv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;csv_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;delimiter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;','&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;rows&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;idx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;enumerate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;csv_reader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;idx&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;

            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rows&lt;/span&gt;


    &lt;span class=&quot;c&quot;&gt;#Concatenate into a &quot;full name&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;full_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nameget&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;firstnum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'voornamen.csv'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot; &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nameget&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lastnum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'achternamen.csv'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Your name is: &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;full_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;full_name&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;email-generator&quot;&gt;Email Generator&lt;/h2&gt;

&lt;p&gt;The final piece of information needed is a disposable email address–fortunately, &lt;em&gt;10minutemail&lt;/em&gt; provides an excellent service that does exactly as its name suggests. The block of code below uses the requests and BeautifulSoup packages to request an instance of the &lt;em&gt;10minutemail&lt;/em&gt; website, and scrape the HTML element containing only the email address. This is subsequently returned as a string.&lt;/p&gt;

&lt;div class=&quot;language-py highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;##########Email Generator###############&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getmail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;requests&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://www.10minutemail.com&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;timeout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;pc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BeautifulSoup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;html.parser&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;email&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;input&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;mailAddress&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'value'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;email&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;sending-name-and-email-input&quot;&gt;Sending Name and Email Input&lt;/h2&gt;

&lt;p&gt;Now that we have a “real” sounding Dutch name, as well as a disposable email address, we can send the relevant inputs to the voting site. The block of code below is from the main &lt;em&gt;vote&lt;/em&gt; function that was referenced in the first part of this write-up, and operates in much the same way. It finds the relevant input field’s XPATH, and subsequently enters the required information as generated through our generator functions.&lt;/p&gt;

&lt;div class=&quot;language-py highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#Song selection is now complete. We now need to fill in name/email and submit the vote&lt;/span&gt;

  &lt;span class=&quot;c&quot;&gt;#Click through to next pages&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find_element_by_xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;songnext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;click&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wtl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find_element_by_xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;motiveernext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;click&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wtl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;


  &lt;span class=&quot;c&quot;&gt;#Call name generator to enter a random name, call email generator for disposable mail&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find_element_by_xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;send_keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;namegenerator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find_element_by_xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;send_keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getmail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;


  &lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;execute_script&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;window.scrollTo(0, document.body.scrollHeight)&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;#accept terms and conditions&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find_element_by_xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tandc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;click&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;now-what&quot;&gt;Now What?&lt;/h2&gt;

&lt;p&gt;We have sent through our song choices and entered the requested personal information to vote, what could possibly be left? As you would expect from such a reputable institution, there is a final familiar layer of protection to would-be spammers–the dreaded reCAPTCHA. To be fair–this is where the project stalled (read: crashed and burned), but if you are interested in potential subversion strategies and theories, read on to &lt;a href=&quot;https://denzilly.github.io/2019/01/08/Slayerpart3/&quot;&gt;part 3.&lt;/a&gt;.&lt;/p&gt;</content><author><name>Bart Timmer</name><email>btimmer313@gmail.com</email></author><category term="Programming" /><category term="Music" /><summary type="html">Welcome back to this short write-up of the top2000 Slayer voter! In this installment, we will look more closely at the part of the script that generates random names and email addresses.</summary></entry><entry><title type="html">Slaying the Top 2000: Part 1</title><link href="https://denzilly.github.io/2018/12/08/Slayer/" rel="alternate" type="text/html" title="Slaying the Top 2000: Part 1" /><published>2018-12-08T00:00:00+01:00</published><updated>2018-12-08T00:00:00+01:00</updated><id>https://denzilly.github.io/2018/12/08/Slayer</id><content type="html" xml:base="https://denzilly.github.io/2018/12/08/Slayer/">&lt;p align=&quot;middle&quot;&gt;&lt;img src=&quot;https://i.imgur.com/pORSkk1.jpg&quot; alt=&quot;Tom Araya&quot; /&gt;&lt;/p&gt;
&lt;p style=&quot;color: gray; font-size: 80%; text-align: center;&quot;&gt;Photo credit: &lt;a href=&quot;https://www.instagram.com/jackpotplus/?hl=en&quot;&gt;Fred Pessaro&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;What if it were possible to (hypothetically) overthrow the top 2000 using a couple of python scripts running in tandem, and in doing so start the new year off with something different?&lt;/p&gt;

&lt;p&gt;For nearly 20 years now, the NPO2’s top 2000 marathon radio program has been a staple of a Dutch new year’s eve. Remarkably,
last year’s edition was listened to by &lt;strong&gt;11.3 million&lt;/strong&gt; people, or some 76% of the population aged 10 or older. In comparison, the King’s 2017 christmas address drew a mere million viewers.&lt;/p&gt;

&lt;p align=&quot;middle&quot;&gt;&lt;img src=&quot;https://i.imgur.com/yC3C4f6.jpg&quot; alt=&quot;Willem&quot; /&gt;&lt;/p&gt;
&lt;p style=&quot;color:gray; font-size: 80%; text-align: center;&quot;&gt;&lt;em&gt;Unimpressed&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The mere suggestion of manipulating the results of this list drew a good friend to describe it as a sacred national institution, and that anything of the sort would be akin to high treason.&lt;/p&gt;

&lt;p&gt;Don’t get me wrong, the idea behind the top 2000 is pretty compelling and wholesome, but to be frank, the top of this list has met with little variation since it’s inception. Indeed, anyone who knows anything about this list, knows that Queen’s &lt;em&gt;Bohemian Rhapsody&lt;/em&gt; has been in the number 1 spot almost every single time, otherwise taking second place. This being the crown jewel of repetition, the top 10 is otherwise populated by songs that you also loved to hear, the first 14 times you heard them. Such hotel-lobby bangers as &lt;em&gt;Hotel California&lt;/em&gt;, &lt;em&gt;Piano Man&lt;/em&gt;, and &lt;em&gt;November Rain&lt;/em&gt; all tend to come back, year after year.&lt;/p&gt;

&lt;p&gt;Enter Slayer. A band whose reputation precedes it as one of the heaviest, fastest, and most sonically abraisive acts in modern music. Celebrated by metalheads of all cultures and origins as one of the groups to have established the thrash metal movement, their music has inspired an entire generation of musicians, and united lovers of heavy music all over the globe.&lt;/p&gt;

&lt;p&gt;Why not try and take the #1 spot away from Freddie, and see if we could celebrate everything Slayer has done in the year that they choose to hang up their guitars?&lt;/p&gt;

&lt;h2 id=&quot;goals-and-requirements&quot;&gt;Goals and Requirements&lt;/h2&gt;

&lt;p&gt;The plan had a simple goal: vote as many times as &lt;del&gt;humanly&lt;/del&gt; possible for the Slayer song “Angel of Death”, with the hope of cracking the top 10. Since time is short, and I’m not completely aware of the internal anti-botting measures in place on the voting website, I decided to use the &lt;a href=&quot;https://www.seleniumhq.org/&quot;&gt;Selenium&lt;/a&gt; web-driver to autonomously steer a  browser into doing my bidding, and enter information into the fields of my choosing. The main goal of this project was to help me brush up on a bit of python, since actually putting this into action (god forbid it worked) would be a gross violation of the ToC and possibly illegal.&lt;/p&gt;

&lt;p&gt;The top 2000 voting schema works as follows:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Vote for a minimum of 5 songs of your choosing&lt;/li&gt;
  &lt;li&gt;Enter your motivation for choosing said songs (optional)&lt;/li&gt;
  &lt;li&gt;Enter your full name and e-mail address&lt;/li&gt;
  &lt;li&gt;Accept the ToC and complete a reCAPTCHA&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;At this point, the first challenges present themselves.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;We need to vote for 4 other songs, if we choose the same ones each time, then they will get an equal number of votes. Also, we should probably randomize Slayer’s position in the order to be more inconspicuous.&lt;/li&gt;
  &lt;li&gt;We need a bunch of generic names, as well as email addresses&lt;/li&gt;
  &lt;li&gt;We need to find a way to circumvent the CAPTCHA&lt;/li&gt;
  &lt;li&gt;The script needs to execute in as little time as possible, such that it can complete as often as possible.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;First off though, we need to set up the webdriver.&lt;/p&gt;

&lt;h2 id=&quot;set-up&quot;&gt;Set-up&lt;/h2&gt;

&lt;p&gt;To get started, we imported the relevant packages and initialised the webdriver to work with firefox.&lt;/p&gt;

&lt;div class=&quot;language-py highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;selenium&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;webdriver&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;selenium.webdriver.common.action_chains&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ActionChains&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;random&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;csv&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;os&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;time&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;bs4&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BeautifulSoup&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;requests&lt;/span&gt;


&lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;webdriver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Firefox&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://stem.nporadio2.nl/top2000/1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The Selenium webdriver allows you to call all sorts of actions on elements on a webpage. In order to do this, you need to provide it with the location of the element that you want to manipulate. This can be by searching through HTML tags based on class or id, but I have found using XPath to be the quickest for the selection of specific elements on a page.&lt;/p&gt;

&lt;p&gt;To find the XPath of an object on a webpage, simply inspect it in your browser. Firefox and Chrome both provide a handy copy XPath option that allows you to jam it directly into a &lt;em&gt;find_element_by_xpath&lt;/em&gt; in your code. As an example, clicking a button would look something like this:&lt;/p&gt;

&lt;div class=&quot;language-py highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find_element_by_xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;XPATH_TO_BUTTON&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;click&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;voting--selecting-songs&quot;&gt;Voting &amp;amp; Selecting songs&lt;/h2&gt;

&lt;p&gt;The initial voting procedure is relatively simple–we are required to select a minimum of 5 songs from an interactive applet. The window has a search field, as well as a random selection of popular choices that populates the search results area when no query is entered.&lt;/p&gt;

&lt;p&gt;This essentially comes down to instructing Selenium to manipulate the browser automatically, in the same way that a ‘real’ voter would otherwise do this by manually. We want to vote for the minimum 5 songs, of which one will be &lt;em&gt;Angel of Death&lt;/em&gt;.&lt;/p&gt;

&lt;div class=&quot;language-py highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#Voting&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;#Randomly select position of slayer&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;position&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;randint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Position is &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;   
  &lt;span class=&quot;c&quot;&gt;#Randomised position of slayer song in the list&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
      &lt;span class=&quot;c&quot;&gt;#Vote for Slayer&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;c&quot;&gt;#select field and search slayer if position matches x&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;execute_script&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;window.scrollTo(0, 0)&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wtl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find_element_by_xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;textentry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;send_keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;slayer&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wtl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find_element_by_xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slayerbtn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;click&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wtl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

          &lt;span class=&quot;c&quot;&gt;#clear the search field to return the list of default songs&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find_element_by_xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;textentry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;clear&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wtl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

      &lt;span class=&quot;c&quot;&gt;#Vote for random song in top of list&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;currentsong&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/html/body/div[1]/div/div/div[3]/div[2]/div/ul/div/div/li[&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s]/div/div/div/div/div[3]/button[2]&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),)&lt;/span&gt;

          &lt;span class=&quot;c&quot;&gt;#if its too far down the list, scroll it into view&lt;/span&gt;
          &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
              &lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;execute_script&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;window.scrollTo(0, 500)&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
          &lt;span class=&quot;c&quot;&gt;#Vote for the song&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
          &lt;span class=&quot;c&quot;&gt;#vote for a default song&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find_element_by_xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;currentsong&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;click&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
          &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;vote &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s was cast&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Some notes on this:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;We need to vote for 4 other songs–obviously not the same ones every time! Luckily, the list of songs that populate the search result field when the search bar is empty seem to be relatively random (or at least don’t seem to repeat very often). As such, we can simply choose 4 of these every time to fill out our minimum 5 votes.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;You will notice many blocks in the code below containing &lt;em&gt;time.sleep(wtl)&lt;/em&gt; or &lt;em&gt;time.sleep(wts)&lt;/em&gt;. This is a simple function that allows me to tell the browser to wait for a predetermined amount of time. In this case, I have wtl and wts (wait-long and short) set to 1.5 and 0.7 seconds respectively. This is sometimes necessary to allow all elements on a page to load, for example after searching for a song or clicking through to the next form. There are far cleaner ways of doing this, but I was in a hurry to try and get this together in time!&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;It might seem somewhat suspicious if our Slayer song comes in the same position (of the 5 songs) each time we vote. Even though they are not ranked, it might alleviate suspicion if it isn’t in position &lt;em&gt;x&lt;/em&gt; each time. The beginning of the function generates a random integer &lt;em&gt;position&lt;/em&gt; between 1 and 5 inclusive, which will denote the position of &lt;em&gt;Angel of Death&lt;/em&gt; in our 5 songs. The function then loops through possible positions, either voting for &lt;em&gt;Angel of Death&lt;/em&gt; or one of the default songs from the list.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;I have pasted all of the necessary XPATHs into a neat little block elsewhere at the top of my code and stored them as strings. These have been referenced in the find_elment calls (e.g. textentry, slayerbtn)&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is essentially how the voting part of the webdriver works. In the &lt;a href=&quot;https://denzilly.github.io/2018/12/22/Slayerpart2/&quot;&gt;next installment&lt;/a&gt;, we will look at how to generate names and emails, as well as plans for the future!&lt;/p&gt;</content><author><name>Bart Timmer</name><email>btimmer313@gmail.com</email></author><category term="Programming" /><category term="Music" /><summary type="html">Photo credit: Fred Pessaro What if it were possible to (hypothetically) overthrow the top 2000 using a couple of python scripts running in tandem, and in doing so start the new year off with something different?</summary></entry><entry><title type="html">Bartnet, and how it works</title><link href="https://denzilly.github.io/2018/11/30/origins/" rel="alternate" type="text/html" title="Bartnet, and how it works" /><published>2018-11-30T00:00:00+01:00</published><updated>2018-11-30T00:00:00+01:00</updated><id>https://denzilly.github.io/2018/11/30/origins</id><content type="html" xml:base="https://denzilly.github.io/2018/11/30/origins/">&lt;p&gt;Putting aside the ‘how’ for a second, why does this page exist? Why do blogs exist at all? Is it really necessary for every single person to air out their metaphorical dirty laundry on the internet, for all to see?&lt;/p&gt;

&lt;p&gt;Surely enlightenment can be sought elsewhere, from sources more credible than the recalcitrant braincells that choose to always sit at the back of the bus. Instead, you could read a book or newspaper, or perhaps even attempt to decipher a dirty handkerchief.&lt;/p&gt;

&lt;p&gt;A power inside compels us, for whatever reason, to share our experiences with the world; some to teach, some to persuade, and some to entertain.&lt;/p&gt;

&lt;h2 id=&quot;how-it-works&quot;&gt;How it works&lt;/h2&gt;

&lt;p&gt;This site is run using &lt;a href=&quot;https://jekyllrb.com&quot;&gt;Jekyll&lt;/a&gt;, a simple site generation platform written in ruby, that works great for static sites such as blogs. While being easy to use and update, one of the best features is arguably that you can host a website in one click on Github Pages, as they offer a built in Jekyll page builder.&lt;/p&gt;

&lt;p&gt;Credit where credit is due, styling of this page is run off of a template called &lt;a href=&quot;https://hydejack.com&quot;&gt;&lt;em&gt;Hydejack&lt;/em&gt;&lt;/a&gt;, made by the talented qwtel.&lt;/p&gt;

&lt;p&gt;The page is run out of two repositories, one for development and one for deployment, so that it can be edited from virtually anywhere as long as I have access to the internet.&lt;/p&gt;

&lt;p&gt;The development repository contains everything needed to build the site, including all markdown files, stylesheets, javascript etc. The static site files are generated using these, and then moved to the deployment repository which houses just the generated static site files. Github automatically builds and hosts the site from the static files.&lt;/p&gt;

&lt;p&gt;Ideas for posts:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Chess WC battle&lt;/li&gt;
  &lt;li&gt;Ardea GM&lt;/li&gt;
  &lt;li&gt;Myanmar metals writeup&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Bart Timmer</name><email>btimmer313@gmail.com</email></author><category term="hydejack" /><summary type="html">Putting aside the ‘how’ for a second, why does this page exist? Why do blogs exist at all? Is it really necessary for every single person to air out their metaphorical dirty laundry on the internet, for all to see?</summary></entry></feed>